##############################################################################
#  ocaml-fileutils: files and filenames common operations                    #
#                                                                            #
#  Copyright (C) 2003-2014, Sylvain Le Gall                                  #
#                                                                            #
#  This library is free software; you can redistribute it and/or modify it   #
#  under the terms of the GNU Lesser General Public License as published by  #
#  the Free Software Foundation; either version 2.1 of the License, or (at   #
#  your option) any later version, with the OCaml static compilation         #
#  exception.                                                                #
#                                                                            #
#  This library is distributed in the hope that it will be useful, but       #
#  WITHOUT ANY WARRANTY; without even the implied warranty of                #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the file         #
#  COPYING for more details.                                                 #
#                                                                            #
#  You should have received a copy of the GNU Lesser General Public License  #
#  along with this library; if not, write to the Free Software Foundation,   #
#  Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA             #
##############################################################################

# OASIS_START
# DO NOT EDIT (digest: 51a2fda63fd8a090c20c216e4133faf1)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library debian-formats
"src/debian-formats.cmxs": use_debian-formats
<src/*.ml{,i,y}>: pkg_extlib
<src/*.ml{,i,y}>: pkg_mikmatch_pcre
<src/*.ml{,i,y}>: pkg_str
# Executable test
"test/test.byte": pkg_extlib
"test/test.byte": pkg_mikmatch_pcre
"test/test.byte": pkg_oUnit
"test/test.byte": pkg_str
"test/test.byte": use_debian-formats
<test/*.ml{,i,y}>: pkg_extlib
<test/*.ml{,i,y}>: pkg_mikmatch_pcre
<test/*.ml{,i,y}>: pkg_oUnit
<test/*.ml{,i,y}>: pkg_str
<test/*.ml{,i,y}>: use_debian-formats
# Executable proto_oasis
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_archive.lwt
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_bz2
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_curl
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_extlib
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_fileutils
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_lwt.preemptive
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_mikmatch_pcre
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_oasis
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_pcre
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_str
<examples/proto_oasis/proto_oasis.{native,byte}>: pkg_threads
<examples/proto_oasis/proto_oasis.{native,byte}>: use_debian-formats
<examples/proto_oasis/*.ml{,i,y}>: pkg_archive.lwt
<examples/proto_oasis/*.ml{,i,y}>: pkg_bz2
<examples/proto_oasis/*.ml{,i,y}>: pkg_curl
<examples/proto_oasis/*.ml{,i,y}>: pkg_extlib
<examples/proto_oasis/*.ml{,i,y}>: pkg_fileutils
<examples/proto_oasis/*.ml{,i,y}>: pkg_lwt.preemptive
<examples/proto_oasis/*.ml{,i,y}>: pkg_mikmatch_pcre
<examples/proto_oasis/*.ml{,i,y}>: pkg_oasis
<examples/proto_oasis/*.ml{,i,y}>: pkg_pcre
<examples/proto_oasis/*.ml{,i,y}>: pkg_str
<examples/proto_oasis/*.ml{,i,y}>: pkg_threads
<examples/proto_oasis/*.ml{,i,y}>: use_debian-formats
# OASIS_STOP

"src/DFChangelog.ml": syntax_camlp4o
"src/DFWatch.ml": syntax_camlp4o
